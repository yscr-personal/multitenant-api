import org.jetbrains.kotlin.gradle.internal.KaptWithoutKotlincTask

plugins {
    id "org.springframework.boot" version "3.0.5"
    id "io.spring.dependency-management" version "1.1.0"
    id "org.jetbrains.kotlin.jvm" version "1.8.20"
    id "org.jetbrains.kotlin.kapt" version "1.8.20"
    id "org.jetbrains.kotlin.plugin.spring" version "1.8.20"
    id "org.jetbrains.kotlin.plugin.jpa" version "1.8.20"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.8.20"
    id "org.jetbrains.kotlin.plugin.noarg" version "1.8.20"
}

allprojects {
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"
    apply plugin: "org.jetbrains.kotlin.jvm"
    apply plugin: "org.jetbrains.kotlin.kapt"
    apply plugin: "org.jetbrains.kotlin.plugin.spring"
    apply plugin: "org.jetbrains.kotlin.plugin.jpa"
    apply plugin: "org.jetbrains.kotlin.plugin.allopen"

    apply from: "${rootProject.rootDir}/config/jacoco.gradle"
    apply from: "${rootProject.rootDir}/config/checkstyle.gradle"
    apply from: "${rootProject.rootDir}/config/pmd.gradle"
    apply from: "${rootProject.rootDir}/config/tests.gradle"

    group = "com.yuriserka.template"
    version = "0.0.1-SNAPSHOT"

    sourceCompatibility = "17"
    targetCompatibility = "17"

    kotlin.target.compilations.configureEach {
        kotlinOptions.jvmTarget = "17"
        kotlinOptions.freeCompilerArgs += ["-Xjsr305=strict"]
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        maven() { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
        mavenLocal()
    }

    bootJar {
        enabled = false
    }

    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
        testImplementation "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
        testImplementation "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-devtools:${springBootVersion}"
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-aop:${springBootVersion}"
        implementation "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}"

        implementation "io.sentry:sentry-logback:${sentryVersion}"
        implementation "io.sentry:sentry-spring-boot-starter-jakarta:${sentryVersion}"

        implementation "org.mapstruct:mapstruct:${mapstructVersion}"
        kapt "org.mapstruct:mapstruct-processor:${mapstructVersion}"

        implementation "org.springframework.cloud:spring-cloud-starter-openfeign:${openFeignVersion}"

        implementation "io.github.microutils:kotlin-logging-jvm:${springBootVersion}"
        implementation "io.github.microutils:kotlin-logging:${springBootVersion}"
        implementation "org.slf4j:slf4j-simple:1.7.32"

        implementation "io.micrometer:micrometer-registry-prometheus:${micrometerVersion}"

        implementation "org.jetbrains.kotlin:kotlin-reflect"
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

        testImplementation "com.ninja-squad:springmockk:${springMockkVersion}"

        implementation "com.fasterxml.jackson.module:jackson-module-kotlin:${jacksonVersion}"
    }

    noArg {
        annotation("com.yuriserka.template.core.config.annotations.NoArg")
        invokeInitializers = true
    }

    kapt {
        arguments {
            arg("mapstruct.defaultComponentModel", "spring")
            arg("mapstruct.unmappedTargetPolicy", "ignore")
        }
        keepJavacAnnotationProcessors = true
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

tasks.named("test") {
    useJUnitPlatform()
}

tasks.register('codeChecks', GradleBuild) {
    tasks = ["checkstyleMain", "pmdMain", "checkstyleTest", "pmdTest"]
}

dependencies {
    implementation project(":api")
    implementation project(":core")
}

tasks.withType(KaptWithoutKotlincTask.class)
        .configureEach {
            kaptProcessJvmArgs.add('-Xmx512m')
        }
